    /**
     * Crée des déclarations pour les propriétés et concessions
     * La déclaration est le fait d'enregistrer un bien au nom d'un contribuable
     */
    private List<Declaration> createDeclarations(List<Propriete> proprietes, List<ConcessionMinier> concessions, 
                                              List<Agent> agents, List<Contribuable> contribuables) {
        List<Declaration> declarations = new ArrayList<>();
        Random random = new Random(42);
        Calendar cal = Calendar.getInstance();
        
        // Sélectionner un agent validateur (rôle TAXATEUR ou CHEF_DE_BUREAU)
        Agent agentValidateur = agents.get(0); // Par défaut, le premier agent
        
        // Pour chaque propriété, créer une déclaration
        for (Propriete propriete : proprietes) {
            // Date de déclaration (entre 1 et 12 mois dans le passé)
            cal.setTime(new Date());
            cal.add(Calendar.MONTH, -1 * (1 + random.nextInt(12)));
            Date dateDeclaration = cal.getTime();
            
            // Statut de la déclaration
            StatutDeclaration statut = random.nextDouble() < 0.8 ? 
                    StatutDeclaration.VALIDEE : StatutDeclaration.SOUMISE;
            
            // Source de la déclaration (en ligne ou à l'administration)
            SourceDeclaration source = propriete.isDeclarationEnLigne() ? 
                    SourceDeclaration.EN_LIGNE : SourceDeclaration.ADMINISTRATION;
            
            // Créer la déclaration
            Declaration declaration = new Declaration();
            declaration.setDateDeclaration(dateDeclaration);
            declaration.setStatut(statut);
            declaration.setSource(source);
            declaration.setPropriete(propriete);
            declaration.setContribuable(propriete.getProprietaire());
            
            // Si la déclaration est validée, associer un agent validateur
            if (statut == StatutDeclaration.VALIDEE) {
                declaration.setAgentValidateur(agentValidateur);
            }
            
            declaration.setActif(true);
            declarations.add(declaration);
        }
        
        // Pour chaque concession, créer une déclaration
        for (ConcessionMinier concession : concessions) {
            // Date de déclaration (entre 1 et 12 mois dans le passé)
            cal.setTime(new Date());
            cal.add(Calendar.MONTH, -1 * (1 + random.nextInt(12)));
            Date dateDeclaration = cal.getTime();
            
            // Statut de la déclaration (toujours validée pour les concessions)
            StatutDeclaration statut = StatutDeclaration.VALIDEE;
            
            // Source de la déclaration (toujours à l'administration pour les concessions)
            SourceDeclaration source = SourceDeclaration.ADMINISTRATION;
            
            // Créer la déclaration
            Declaration declaration = new Declaration();
            declaration.setDateDeclaration(dateDeclaration);
            declaration.setStatut(statut);
            declaration.setSource(source);
            declaration.setConcession(concession);
            declaration.setContribuable(concession.getTitulaire());
            declaration.setAgentValidateur(agentValidateur);
            declaration.setActif(true);
            declarations.add(declaration);
        }
        
        logger.info("Création de {} déclarations", declarations.size());
        return declarations;
    }
